<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\F103.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\F103.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5050106: Last Updated: Fri Aug 10 13:56:52 2018
<BR><P>
<H3>Maximum Stack Usage =        264 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; Duty_Loop &rArr; Duty_10ms &rArr; Openmv_DT_Data_Receive_Anl &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_string
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[6d]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1f]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1f]">ADC1_2_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1f]">ADC1_2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3c]">ADC3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[7]">BusFault_Handler</a> from stm32f10x_it.o(i.BusFault_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[22]">CAN1_RX1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[23]">CAN1_SCE_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[18]">DMA1_Channel1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[19]">DMA1_Channel2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[1a]">DMA1_Channel3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[1b]">DMA1_Channel4_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[1c]">DMA1_Channel5_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[1d]">DMA1_Channel6_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[1e]">DMA1_Channel7_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[45]">DMA2_Channel1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[46]">DMA2_Channel2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[47]">DMA2_Channel3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[48]">DMA2_Channel4_5_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[a]">DebugMon_Handler</a> from stm32f10x_it.o(i.DebugMon_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[13]">EXTI0_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[35]">EXTI15_10_IRQHandler</a> from warn.o(i.EXTI15_10_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[14]">EXTI1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[15]">EXTI2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[16]">EXTI3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[17]">EXTI4_IRQHandler</a> from warn.o(i.EXTI4_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[24]">EXTI9_5_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[11]">FLASH_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3d]">FSMC_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[5]">HardFault_Handler</a> from stm32f10x_it.o(i.HardFault_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2d]">I2C1_ER_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2c]">I2C1_EV_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2f]">I2C2_ER_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2e]">I2C2_EV_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[6]">MemManage_Handler</a> from stm32f10x_it.o(i.MemManage_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[4]">NMI_Handler</a> from stm32f10x_it.o(i.NMI_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[e]">PVD_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[b]">PendSV_Handler</a> from stm32f10x_it.o(i.PendSV_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[12]">RCC_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[36]">RTCAlarm_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[10]">RTC_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3]">Reset_Handler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3e]">SDIO_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[30]">SPI1_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[31]">SPI2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[40]">SPI3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[9]">SVC_Handler</a> from stm32f10x_it.o(i.SVC_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[c]">SysTick_Handler</a> from stm32f10x_it.o(i.SysTick_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[49]">SystemInit</a> from system_stm32f10x.o(i.SystemInit) referenced from startup_stm32f10x_hd.o(.text)
 <LI><a href="#[f]">TAMPER_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[25]">TIM1_BRK_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[28]">TIM1_CC_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[27]">TIM1_TRG_COM_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[26]">TIM1_UP_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[29]">TIM2_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2a]">TIM3_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[2b]">TIM4_IRQHandler</a> from stm32f10x_it.o(i.TIM4_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3f]">TIM5_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[43]">TIM6_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[44]">TIM7_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[38]">TIM8_BRK_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3b]">TIM8_CC_IRQHandler</a> from stm32f10x_it.o(i.TIM8_CC_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[3a]">TIM8_TRG_COM_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[39]">TIM8_UP_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[41]">UART4_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[42]">UART5_IRQHandler</a> from stm32f10x_it.o(i.UART5_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[32]">USART1_IRQHandler</a> from stm32f10x_it.o(i.USART1_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[33]">USART2_IRQHandler</a> from usart.o(i.USART2_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[34]">USART3_IRQHandler</a> from usart.o(i.USART3_IRQHandler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[37]">USBWakeUp_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[20]">USB_HP_CAN1_TX_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[21]">USB_LP_CAN1_RX0_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[8]">UsageFault_Handler</a> from stm32f10x_it.o(i.UsageFault_Handler) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[d]">WWDG_IRQHandler</a> from startup_stm32f10x_hd.o(.text) referenced from startup_stm32f10x_hd.o(RESET)
 <LI><a href="#[50]">__main</a> from __main.o(!!!main) referenced from startup_stm32f10x_hd.o(.text)
 <LI><a href="#[4f]">_get_lc_ctype</a> from lc_ctype_c.o(locale$$code) referenced from rt_ctype_table.o(.text)
 <LI><a href="#[4c]">_sbackspace</a> from _sgetc.o(.text) referenced from __0sscanf.o(.text)
 <LI><a href="#[4d]">_scanf_char_input</a> from scanf_char.o(.text) referenced from scanf_char.o(.text)
 <LI><a href="#[4b]">_sgetc</a> from _sgetc.o(.text) referenced from __0sscanf.o(.text)
 <LI><a href="#[4e]">isspace</a> from isspace.o(.text) referenced from scanf_char.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[50]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[51]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[53]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[187]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[188]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[189]"></a>__decompress</STRONG> (Thumb, 90 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[18a]"></a>__decompress1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[18b]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[5a]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[18c]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[18d]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[54]"></a>__rt_lib_init_lc_common</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))
<BR><BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>

<P><STRONG><a name="[18e]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[18f]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[190]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[191]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[56]"></a>__rt_lib_init_lc_ctype_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000012))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_lc_ctype_2 &rArr; _get_lc_ctype
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
</UL>

<P><STRONG><a name="[192]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[193]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[194]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[195]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[196]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[197]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[198]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[199]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[19a]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[19b]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[19c]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[19d]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[19e]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[19f]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[1a0]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[5f]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[1a1]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[1a2]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[1a3]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[1a4]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[1a5]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))

<P><STRONG><a name="[1a6]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B))

<P><STRONG><a name="[52]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[1a7]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[57]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[59]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[1a8]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[5b]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; Duty_Loop &rArr; Duty_10ms &rArr; Openmv_DT_Data_Receive_Anl &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_string
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[1a9]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[6e]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[5e]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[1aa]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[60]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[3]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>ADC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>DMA2_Channel4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>FSMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>RTCAlarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>TIM6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TIM8_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>TIM8_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>TIM8_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>USBWakeUp_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>USB_HP_CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>USB_LP_CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f10x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_stm32f10x_hd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[62]"></a>__0sscanf</STRONG> (Thumb, 52 bytes, Stack size 72 bytes, __0sscanf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_string
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Openmv_DT_Data_Receive_Anl
</UL>

<P><STRONG><a name="[64]"></a>_scanf_int</STRONG> (Thumb, 332 bytes, Stack size 56 bytes, _scanf_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[6b]"></a>_scanf_string</STRONG> (Thumb, 224 bytes, Stack size 56 bytes, _scanf_str.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _scanf_string
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[15e]"></a>abs</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, abs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inav_correct
</UL>

<P><STRONG><a name="[104]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_Data_Prepare
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Openmv_Data_Receive_Prepare
</UL>

<P><STRONG><a name="[1ab]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[1ac]"></a>__rt_memclr_w</STRONG> (Thumb, 78 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[1ad]"></a>_memset_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[1ae]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[1af]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[1b0]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[66]"></a>__read_errno</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, _rserrno.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>

<P><STRONG><a name="[68]"></a>__set_errno</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, _rserrno.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tanf
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cosf
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[65]"></a>_chval</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, _chval.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_int
</UL>

<P><STRONG><a name="[63]"></a>__vfscanf_char</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, scanf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = __vfscanf_char &rArr; __vfscanf &rArr; _scanf_string
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>

<P><STRONG><a name="[4b]"></a>_sgetc</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> __0sscanf.o(.text)
</UL>
<P><STRONG><a name="[4c]"></a>_sbackspace</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> __0sscanf.o(.text)
</UL>
<P><STRONG><a name="[67]"></a>__aeabi_errno_addr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__read_errno
</UL>

<P><STRONG><a name="[1b1]"></a>__errno$intlibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[1b2]"></a>__rt_errno_addr$intlibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[4e]"></a>isspace</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, isspace.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = isspace &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scanf_char.o(.text)
</UL>
<P><STRONG><a name="[69]"></a>__vfscanf</STRONG> (Thumb, 878 bytes, Stack size 96 bytes, _scanf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = __vfscanf &rArr; _scanf_string
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_string
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_int
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char
</UL>

<P><STRONG><a name="[1b3]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[6c]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[1b4]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[58]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[6a]"></a>__rt_ctype_table</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rt_ctype_table.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isspace
</UL>

<P><STRONG><a name="[5d]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[55]"></a>__rt_locale</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_locale_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_common
</UL>

<P><STRONG><a name="[167]"></a>strcmp</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, strcmpv7m.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
</UL>

<P><STRONG><a name="[61]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[1b5]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[1b6]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[1b7]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[6f]"></a>ANO_AK8975_CalOffset_Mag</STRONG> (Thumb, 612 bytes, Stack size 16 bytes, ak8975.o(i.ANO_AK8975_CalOffset_Mag))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = ANO_AK8975_CalOffset_Mag &rArr; Param_SaveMagOffset &rArr; AT24cxx_save_5883_offest &rArr; IIC_ADD_writelen_BYTE &rArr; AT24CXX_WriteOneByte &rArr; Delay_ms &rArr; Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Param_SaveMagOffset
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_AK8975_Read_Mag_Data
</UL>

<P><STRONG><a name="[79]"></a>ANO_AK8975_Read</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, ak8975.o(i.ANO_AK8975_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = ANO_AK8975_Read &rArr; ANO_AK8975_Read_Mag_Data &rArr; ANO_AK8975_CalOffset_Mag &rArr; Param_SaveMagOffset &rArr; AT24cxx_save_5883_offest &rArr; IIC_ADD_writelen_BYTE &rArr; AT24CXX_WriteOneByte &rArr; Delay_ms &rArr; Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_AK8975_Read_Mag_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Duty_10ms
</UL>

<P><STRONG><a name="[7a]"></a>ANO_AK8975_Read_Mag_Data</STRONG> (Thumb, 228 bytes, Stack size 24 bytes, ak8975.o(i.ANO_AK8975_Read_Mag_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = ANO_AK8975_Read_Mag_Data &rArr; ANO_AK8975_CalOffset_Mag &rArr; Param_SaveMagOffset &rArr; AT24cxx_save_5883_offest &rArr; IIC_ADD_writelen_BYTE &rArr; AT24CXX_WriteOneByte &rArr; Delay_ms &rArr; Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_AK8975_Run
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCM_IIC_Read_1Byte
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_AK8975_CalOffset_Mag
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_AK8975_Read
</UL>

<P><STRONG><a name="[7c]"></a>ANO_AK8975_Run</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, ak8975.o(i.ANO_AK8975_Run))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ANO_AK8975_Run &rArr; HCM_IIC_Write_1Byte &rArr; I2c_Soft_WaitAsk &rArr; I2c_Soft_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCM_IIC_Write_1Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;All_Init
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_AK8975_Read_Mag_Data
</UL>

<P><STRONG><a name="[7e]"></a>ANO_DT_Data_Exchange</STRONG> (Thumb, 1112 bytes, Stack size 48 bytes, data_transfer.o(i.ANO_DT_Data_Exchange))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = ANO_DT_Data_Exchange &rArr; ANO_DT_Send_Status &rArr; ANO_DT_Send_Data &rArr; Usart1_Send &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_DT_Send_Version
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_DT_Send_User
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_DT_Send_Status
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_DT_Send_Speed
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_DT_Send_Senser2
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_DT_Send_Senser
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_DT_Send_RCData
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_DT_Send_Power
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_DT_Send_PID
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_DT_Send_MotoPWM
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_DT_Send_Check
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Duty_1ms
</UL>

<P><STRONG><a name="[8b]"></a>ANO_DT_Data_Receive_Anl</STRONG> (Thumb, 2490 bytes, Stack size 40 bytes, data_transfer.o(i.ANO_DT_Data_Receive_Anl))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = ANO_DT_Data_Receive_Anl &rArr; Para_ResetToFactorySetup &rArr; PID_Para_Init &rArr; h_pid_init &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Para_ResetToFactorySetup
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Para_Init
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Feed_Rc_Dog
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_DT_Data_Receive_Prepare
</UL>

<P><STRONG><a name="[92]"></a>ANO_DT_Data_Receive_Prepare</STRONG> (Thumb, 216 bytes, Stack size 8 bytes, data_transfer.o(i.ANO_DT_Data_Receive_Prepare))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = ANO_DT_Data_Receive_Prepare &rArr; ANO_DT_Data_Receive_Anl &rArr; Para_ResetToFactorySetup &rArr; PID_Para_Init &rArr; h_pid_init &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_DT_Data_Receive_Anl
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart1_IRQ
</UL>

<P><STRONG><a name="[93]"></a>ANO_DT_Send_Data</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, data_transfer.o(i.ANO_DT_Send_Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ANO_DT_Send_Data &rArr; Usart1_Send &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart1_Send
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_DT_Send_Version
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_DT_Send_User
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_DT_Send_Status
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_DT_Send_Speed
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_DT_Send_Senser2
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_DT_Send_Senser
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_DT_Send_RCData
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_DT_Send_Power
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_DT_Send_PID
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_DT_Send_MotoPWM
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_DT_Send_Check
</UL>

<P><STRONG><a name="[88]"></a>ANO_DT_Send_MotoPWM</STRONG> (Thumb, 294 bytes, Stack size 32 bytes, data_transfer.o(i.ANO_DT_Send_MotoPWM))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = ANO_DT_Send_MotoPWM &rArr; ANO_DT_Send_Data &rArr; Usart1_Send &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_DT_Send_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_DT_Data_Exchange
</UL>

<P><STRONG><a name="[8a]"></a>ANO_DT_Send_PID</STRONG> (Thumb, 516 bytes, Stack size 48 bytes, data_transfer.o(i.ANO_DT_Send_PID))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = ANO_DT_Send_PID &rArr; ANO_DT_Send_Data &rArr; Usart1_Send &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_DT_Send_Data
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_DT_Data_Exchange
</UL>

<P><STRONG><a name="[89]"></a>ANO_DT_Send_Power</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, data_transfer.o(i.ANO_DT_Send_Power))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = ANO_DT_Send_Power &rArr; ANO_DT_Send_Data &rArr; Usart1_Send &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_DT_Send_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_DT_Data_Exchange
</UL>

<P><STRONG><a name="[86]"></a>ANO_DT_Send_RCData</STRONG> (Thumb, 350 bytes, Stack size 32 bytes, data_transfer.o(i.ANO_DT_Send_RCData))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = ANO_DT_Send_RCData &rArr; ANO_DT_Send_Data &rArr; Usart1_Send &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_DT_Send_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_DT_Data_Exchange
</UL>

<P><STRONG><a name="[84]"></a>ANO_DT_Send_Senser</STRONG> (Thumb, 406 bytes, Stack size 40 bytes, data_transfer.o(i.ANO_DT_Send_Senser))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = ANO_DT_Send_Senser &rArr; ANO_DT_Send_Data &rArr; Usart1_Send &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_DT_Send_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_DT_Data_Exchange
</UL>

<P><STRONG><a name="[85]"></a>ANO_DT_Send_Senser2</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, data_transfer.o(i.ANO_DT_Send_Senser2))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = ANO_DT_Send_Senser2 &rArr; ANO_DT_Send_Data &rArr; Usart1_Send &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_DT_Send_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_DT_Data_Exchange
</UL>

<P><STRONG><a name="[82]"></a>ANO_DT_Send_Speed</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, data_transfer.o(i.ANO_DT_Send_Speed))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = ANO_DT_Send_Speed &rArr; ANO_DT_Send_Data &rArr; Usart1_Send &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_DT_Send_Data
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_DT_Data_Exchange
</UL>

<P><STRONG><a name="[81]"></a>ANO_DT_Send_Status</STRONG> (Thumb, 316 bytes, Stack size 48 bytes, data_transfer.o(i.ANO_DT_Send_Status))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = ANO_DT_Send_Status &rArr; ANO_DT_Send_Data &rArr; Usart1_Send &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_DT_Send_Data
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_DT_Data_Exchange
</UL>

<P><STRONG><a name="[83]"></a>ANO_DT_Send_User</STRONG> (Thumb, 364 bytes, Stack size 24 bytes, data_transfer.o(i.ANO_DT_Send_User))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = ANO_DT_Send_User &rArr; ANO_DT_Send_Data &rArr; Usart1_Send &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_DT_Send_Data
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_DT_Data_Exchange
</UL>

<P><STRONG><a name="[80]"></a>ANO_DT_Send_Version</STRONG> (Thumb, 192 bytes, Stack size 32 bytes, data_transfer.o(i.ANO_DT_Send_Version))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = ANO_DT_Send_Version &rArr; ANO_DT_Send_Data &rArr; Usart1_Send &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_DT_Send_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_DT_Data_Exchange
</UL>

<P><STRONG><a name="[95]"></a>AT24CXX_Check</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, 24cxx.o(i.AT24CXX_Check))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = AT24CXX_Check &rArr; AT24CXX_WriteOneByte &rArr; Delay_ms &rArr; Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_WriteOneByte
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_ReadOneByte
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_Init
</UL>

<P><STRONG><a name="[98]"></a>AT24CXX_Init</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, 24cxx.o(i.AT24CXX_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = AT24CXX_Init &rArr; AT24CXX_Check &rArr; AT24CXX_WriteOneByte &rArr; Delay_ms &rArr; Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_Soft_Init
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_Check
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;All_Init
</UL>

<P><STRONG><a name="[96]"></a>AT24CXX_ReadOneByte</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, 24cxx.o(i.AT24CXX_ReadOneByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = AT24CXX_ReadOneByte &rArr; I2c_Soft_ReadByte &rArr; I2c_Soft_NoAsk
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_Soft_WaitAsk
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_Soft_Stop
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_Soft_Start
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_Soft_SendByte
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_Soft_ReadByte
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_MultiBytes
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_Check
</UL>

<P><STRONG><a name="[97]"></a>AT24CXX_WriteOneByte</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, 24cxx.o(i.AT24CXX_WriteOneByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = AT24CXX_WriteOneByte &rArr; Delay_ms &rArr; Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_Soft_WaitAsk
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_Soft_Stop
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_Soft_Start
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_Soft_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_ADD_writelen_BYTE
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_Check
</UL>

<P><STRONG><a name="[a0]"></a>AT24cxx_read_5883_offest</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, 24cxx.o(i.AT24cxx_read_5883_offest))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = AT24cxx_read_5883_offest &rArr; IIC_Read_MultiBytes &rArr; AT24CXX_ReadOneByte &rArr; I2c_Soft_ReadByte &rArr; I2c_Soft_NoAsk
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_MultiBytes
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Para_Init
</UL>

<P><STRONG><a name="[a2]"></a>AT24cxx_read_Acc_Gyro_offest</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, 24cxx.o(i.AT24cxx_read_Acc_Gyro_offest))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = AT24cxx_read_Acc_Gyro_offest &rArr; IIC_Read_MultiBytes &rArr; AT24CXX_ReadOneByte &rArr; I2c_Soft_ReadByte &rArr; I2c_Soft_NoAsk
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_MultiBytes
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Para_Init
</UL>

<P><STRONG><a name="[a3]"></a>AT24cxx_read_PID_CCD</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, 24cxx.o(i.AT24cxx_read_PID_CCD))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = AT24cxx_read_PID_CCD &rArr; IIC_Read_MultiBytes &rArr; AT24CXX_ReadOneByte &rArr; I2c_Soft_ReadByte &rArr; I2c_Soft_NoAsk
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_MultiBytes
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Para_Init
</UL>

<P><STRONG><a name="[a5]"></a>AT24cxx_read_PID_core</STRONG> (Thumb, 286 bytes, Stack size 24 bytes, 24cxx.o(i.AT24cxx_read_PID_core))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = AT24cxx_read_PID_core &rArr; IIC_Read_MultiBytes &rArr; AT24CXX_ReadOneByte &rArr; I2c_Soft_ReadByte &rArr; I2c_Soft_NoAsk
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_MultiBytes
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Para_Init
</UL>

<P><STRONG><a name="[a6]"></a>AT24cxx_read_PID_hight</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, 24cxx.o(i.AT24cxx_read_PID_hight))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = AT24cxx_read_PID_hight &rArr; IIC_Read_MultiBytes &rArr; AT24CXX_ReadOneByte &rArr; I2c_Soft_ReadByte &rArr; I2c_Soft_NoAsk
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_MultiBytes
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Para_Init
</UL>

<P><STRONG><a name="[a7]"></a>AT24cxx_read_PID_hight_Rate</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, 24cxx.o(i.AT24cxx_read_PID_hight_Rate))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = AT24cxx_read_PID_hight_Rate &rArr; IIC_Read_MultiBytes &rArr; AT24CXX_ReadOneByte &rArr; I2c_Soft_ReadByte &rArr; I2c_Soft_NoAsk
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_MultiBytes
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Para_Init
</UL>

<P><STRONG><a name="[a8]"></a>AT24cxx_read_PID_others</STRONG> (Thumb, 392 bytes, Stack size 24 bytes, 24cxx.o(i.AT24cxx_read_PID_others))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = AT24cxx_read_PID_others &rArr; IIC_Read_MultiBytes &rArr; AT24CXX_ReadOneByte &rArr; I2c_Soft_ReadByte &rArr; I2c_Soft_NoAsk
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_MultiBytes
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Para_Init
</UL>

<P><STRONG><a name="[a9]"></a>AT24cxx_read_PID_shell</STRONG> (Thumb, 286 bytes, Stack size 24 bytes, 24cxx.o(i.AT24cxx_read_PID_shell))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = AT24cxx_read_PID_shell &rArr; IIC_Read_MultiBytes &rArr; AT24CXX_ReadOneByte &rArr; I2c_Soft_ReadByte &rArr; I2c_Soft_NoAsk
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_MultiBytes
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Para_Init
</UL>

<P><STRONG><a name="[aa]"></a>AT24cxx_save_5883_offest</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, 24cxx.o(i.AT24cxx_save_5883_offest))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = AT24cxx_save_5883_offest &rArr; IIC_ADD_writelen_BYTE &rArr; AT24CXX_WriteOneByte &rArr; Delay_ms &rArr; Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_ADD_writelen_BYTE
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Param_SaveMagOffset
</UL>

<P><STRONG><a name="[ac]"></a>AT24cxx_save_Acc_Gyro_offest</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, 24cxx.o(i.AT24cxx_save_Acc_Gyro_offest))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = AT24cxx_save_Acc_Gyro_offest &rArr; IIC_ADD_writelen_BYTE &rArr; AT24CXX_WriteOneByte &rArr; Delay_ms &rArr; Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_ADD_writelen_BYTE
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Param_SaveGyroOffset
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Param_SaveAccelOffset
</UL>

<P><STRONG><a name="[ad]"></a>AT24cxx_save_PID_CCD</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, 24cxx.o(i.AT24cxx_save_PID_CCD))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = AT24cxx_save_PID_CCD &rArr; IIC_ADD_writelen_BYTE &rArr; AT24CXX_WriteOneByte &rArr; Delay_ms &rArr; Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_ADD_writelen_BYTE
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Param_SavePID
</UL>

<P><STRONG><a name="[ae]"></a>AT24cxx_save_PID_core</STRONG> (Thumb, 260 bytes, Stack size 24 bytes, 24cxx.o(i.AT24cxx_save_PID_core))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = AT24cxx_save_PID_core &rArr; IIC_ADD_writelen_BYTE &rArr; AT24CXX_WriteOneByte &rArr; Delay_ms &rArr; Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_ADD_writelen_BYTE
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Param_SavePID
</UL>

<P><STRONG><a name="[af]"></a>AT24cxx_save_PID_hight</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, 24cxx.o(i.AT24cxx_save_PID_hight))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = AT24cxx_save_PID_hight &rArr; IIC_ADD_writelen_BYTE &rArr; AT24CXX_WriteOneByte &rArr; Delay_ms &rArr; Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_ADD_writelen_BYTE
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Param_SavePID
</UL>

<P><STRONG><a name="[b0]"></a>AT24cxx_save_PID_hight_Rate</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, 24cxx.o(i.AT24cxx_save_PID_hight_Rate))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = AT24cxx_save_PID_hight_Rate &rArr; IIC_ADD_writelen_BYTE &rArr; AT24CXX_WriteOneByte &rArr; Delay_ms &rArr; Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_ADD_writelen_BYTE
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Param_SavePID
</UL>

<P><STRONG><a name="[b1]"></a>AT24cxx_save_PID_others</STRONG> (Thumb, 368 bytes, Stack size 24 bytes, 24cxx.o(i.AT24cxx_save_PID_others))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = AT24cxx_save_PID_others &rArr; IIC_ADD_writelen_BYTE &rArr; AT24CXX_WriteOneByte &rArr; Delay_ms &rArr; Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_ADD_writelen_BYTE
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Param_SavePID
</UL>

<P><STRONG><a name="[b2]"></a>AT24cxx_save_PID_shell</STRONG> (Thumb, 260 bytes, Stack size 24 bytes, 24cxx.o(i.AT24cxx_save_PID_shell))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = AT24cxx_save_PID_shell &rArr; IIC_ADD_writelen_BYTE &rArr; AT24CXX_WriteOneByte &rArr; Delay_ms &rArr; Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_ADD_writelen_BYTE
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Param_SavePID
</UL>

<P><STRONG><a name="[b3]"></a>All_Init</STRONG> (Thumb, 214 bytes, Stack size 8 bytes, init.o(i.All_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = All_Init &rArr; lpf2pInit &rArr; lpf2pSetCutoffFreq &rArr; tanf &rArr; __mathlib_rredf2 &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_init
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lpf2pInit
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_sound_init
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart1_Init
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3_Init
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2_Init
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Configuration
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Para_Init
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Out_Init
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_IN_Init
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MS5611_Init
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_Init
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Mag_Err
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_MS5611_Err
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_MPU_Err
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_Soft_Init
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cycle_Time_Init
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_Init
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_AK8975_Run
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c6]"></a>All_Out</STRONG> (Thumb, 544 bytes, Stack size 72 bytes, ctrl.o(i.All_Out))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = All_Out &rArr; SetPwm
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPwm
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTRL_1
</UL>

<P><STRONG><a name="[c8]"></a>AnoOF_DataAnl</STRONG> (Thumb, 732 bytes, Stack size 24 bytes, ano_of.o(i.AnoOF_DataAnl))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = AnoOF_DataAnl &rArr; Get_Cycle_T &rArr; __aeabi_f2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Cycle_T
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnoOF_GetOneByte
</UL>

<P><STRONG><a name="[ca]"></a>AnoOF_GetOneByte</STRONG> (Thumb, 228 bytes, Stack size 8 bytes, ano_of.o(i.AnoOF_GetOneByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = AnoOF_GetOneByte &rArr; AnoOF_DataAnl &rArr; Get_Cycle_T &rArr; __aeabi_f2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnoOF_DataAnl
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[cb]"></a>Auto_switch_2</STRONG> (Thumb, 174 bytes, Stack size 8 bytes, warn.o(i.Auto_switch_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Auto_switch_2 &rArr; __aeabi_cfcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Duty_10ms
</UL>

<P><STRONG><a name="[7]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[cc]"></a>CALIBRATE_duty</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, warn.o(i.CALIBRATE_duty))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CALIBRATE_duty &rArr; __aeabi_fadd
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Duty_50ms
</UL>

<P><STRONG><a name="[129]"></a>CH_Mapping_Fun</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, rc.o(i.CH_Mapping_Fun))
<BR><BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RC_Duty
</UL>

<P><STRONG><a name="[cd]"></a>CTRL_1</STRONG> (Thumb, 2052 bytes, Stack size 56 bytes, ctrl.o(i.CTRL_1))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = CTRL_1 &rArr; All_Out &rArr; SetPwm
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myself_Thr_Ctrl
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;All_Out
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Duty_2ms
</UL>

<P><STRONG><a name="[d0]"></a>CTRL_2</STRONG> (Thumb, 1558 bytes, Stack size 56 bytes, ctrl.o(i.CTRL_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = CTRL_2 &rArr; direction_control &rArr; Mode_3_duty &rArr; mode3_flight_duty &rArr; Direction_flight &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_deathzoom_2
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_deathzoom
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;direction_control
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;To_180_degrees
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Duty_5ms
</UL>

<P><STRONG><a name="[114]"></a>Ctrl_Para_Init</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ctrl.o(i.Ctrl_Para_Init))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Para_Init
</UL>

<P><STRONG><a name="[c4]"></a>Cycle_Time_Init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, time.o(i.Cycle_Time_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Cycle_Time_Init &rArr; Get_Cycle_T &rArr; __aeabi_f2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Cycle_T
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;All_Init
</UL>

<P><STRONG><a name="[a]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[9f]"></a>Delay_ms</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, time.o(i.Delay_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Delay_ms &rArr; Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Para_Init
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MS5611_Init
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_Init
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Mag_Err
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_MS5611_Err
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_MPU_Err
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;All_Init
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_IRQHandler
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_IRQHandler
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_WriteOneByte
</UL>

<P><STRONG><a name="[d7]"></a>Delay_us</STRONG> (Thumb, 24 bytes, Stack size 12 bytes, time.o(i.Delay_us))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSysTime_us
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
</UL>

<P><STRONG><a name="[d9]"></a>Direction_flight</STRONG> (Thumb, 486 bytes, Stack size 56 bytes, trance.o(i.Direction_flight))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Direction_flight &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode3_flight_duty
</UL>

<P><STRONG><a name="[ec]"></a>Duty_100ms</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, scheduler.o(i.Duty_100ms))
<BR><BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Duty_Loop
</UL>

<P><STRONG><a name="[da]"></a>Duty_10ms</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, scheduler.o(i.Duty_10ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = Duty_10ms &rArr; Openmv_DT_Data_Receive_Anl &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_string
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Openmv_DT_Data_Receive_Anl
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Auto_switch_2
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_AK8975_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Duty_Loop
</UL>

<P><STRONG><a name="[dc]"></a>Duty_1ms</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, scheduler.o(i.Duty_1ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = Duty_1ms &rArr; ANO_DT_Data_Exchange &rArr; ANO_DT_Send_Status &rArr; ANO_DT_Send_Data &rArr; Usart1_Send &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Cycle_T
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_DT_Data_Exchange
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Duty_Loop
</UL>

<P><STRONG><a name="[dd]"></a>Duty_20ms</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, scheduler.o(i.Duty_20ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = Duty_20ms &rArr; Parameter_Save &rArr; Param_SavePID &rArr; AT24cxx_save_PID_shell &rArr; IIC_ADD_writelen_BYTE &rArr; AT24CXX_WriteOneByte &rArr; Delay_ms &rArr; Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inav_calution
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parameter_Save
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hight_Duty
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Cycle_T
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Duty_Loop
</UL>

<P><STRONG><a name="[e1]"></a>Duty_2ms</STRONG> (Thumb, 154 bytes, Stack size 40 bytes, scheduler.o(i.Duty_2ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = Duty_2ms &rArr; IMUupdate &rArr; asin &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RC_Duty
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_Read
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_Data_Prepare
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUupdate
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Cycle_T
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSysTime_us
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTRL_1
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Duty_Loop
</UL>

<P><STRONG><a name="[e6]"></a>Duty_50ms</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, scheduler.o(i.Duty_50ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Duty_50ms &rArr; mode_check &rArr; __aeabi_cfcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_light_sound
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_check
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Duty
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CALIBRATE_duty
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Duty_Loop
</UL>

<P><STRONG><a name="[ea]"></a>Duty_5ms</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, scheduler.o(i.Duty_5ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = Duty_5ms &rArr; CTRL_2 &rArr; direction_control &rArr; Mode_3_duty &rArr; mode3_flight_duty &rArr; Direction_flight &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Cycle_T
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSysTime_us
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTRL_2
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Duty_Loop
</UL>

<P><STRONG><a name="[eb]"></a>Duty_Loop</STRONG> (Thumb, 152 bytes, Stack size 8 bytes, scheduler.o(i.Duty_Loop))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = Duty_Loop &rArr; Duty_10ms &rArr; Openmv_DT_Data_Receive_Anl &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_string
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Duty_5ms
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Duty_50ms
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Duty_2ms
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Duty_20ms
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Duty_1ms
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Duty_10ms
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Duty_100ms
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[35]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, warn.o(i.EXTI15_10_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = EXTI15_10_IRQHandler &rArr; Delay_ms &rArr; Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, warn.o(i.EXTI4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = EXTI4_IRQHandler &rArr; Delay_ms &rArr; Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[ee]"></a>EXTI_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_exti.o(i.EXTI_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_IRQHandler
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_IRQHandler
</UL>

<P><STRONG><a name="[164]"></a>EXTI_Init</STRONG> (Thumb, 142 bytes, Stack size 0 bytes, stm32f10x_exti.o(i.EXTI_Init))
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_init
</UL>

<P><STRONG><a name="[8d]"></a>Feed_Rc_Dog</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, rc.o(i.Feed_Rc_Dog))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_DT_Data_Receive_Anl
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TIM8_CC_IRQHandler
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TIM4_IRQHandler
</UL>

<P><STRONG><a name="[ef]"></a>Fly_Ready</STRONG> (Thumb, 474 bytes, Stack size 24 bytes, rc.o(i.Fly_Ready))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Fly_Ready &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RC_Duty
</UL>

<P><STRONG><a name="[163]"></a>GPIO_EXTILineConfig</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, stm32f10x_gpio.o(i.GPIO_EXTILineConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIO_EXTILineConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_init
</UL>

<P><STRONG><a name="[f3]"></a>GPIO_Init</STRONG> (Thumb, 278 bytes, Stack size 24 bytes, stm32f10x_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_init
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_sound_init
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart1_Init
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3_Init
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2_Init
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Out_Init
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_IN_Init
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_Soft_Init
</UL>

<P><STRONG><a name="[117]"></a>GPIO_PinRemapConfig</STRONG> (Thumb, 138 bytes, Stack size 20 bytes, stm32f10x_gpio.o(i.GPIO_PinRemapConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_PinRemapConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3_Init
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2_Init
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_IN_Init
</UL>

<P><STRONG><a name="[ed]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_ReadInputDataBit))
<BR><BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_IRQHandler
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_IRQHandler
</UL>

<P><STRONG><a name="[15f]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_ResetBits))
<BR><BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_light_sound
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_sound_init
</UL>

<P><STRONG><a name="[f4]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_gpio.o(i.GPIO_SetBits))
<BR><BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_light_sound
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_Soft_Init
</UL>

<P><STRONG><a name="[d8]"></a>GetSysTime_us</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, time.o(i.GetSysTime_us))
<BR><BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Cycle_T
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Duty_5ms
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Duty_2ms
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us
</UL>

<P><STRONG><a name="[c9]"></a>Get_Cycle_T</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, time.o(i.Get_Cycle_T))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Get_Cycle_T &rArr; __aeabi_f2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSysTime_us
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Duty_5ms
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Duty_2ms
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Duty_20ms
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Duty_1ms
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cycle_Time_Init
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnoOF_DataAnl
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[7b]"></a>HCM_IIC_Read_1Byte</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, i2c_soft.o(i.HCM_IIC_Read_1Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HCM_IIC_Read_1Byte &rArr; I2c_Soft_ReadByte &rArr; I2c_Soft_NoAsk
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_Soft_WaitAsk
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_Soft_Stop
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_Soft_Start
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_Soft_SendByte
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_Soft_ReadByte
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_AK8975_Read_Mag_Data
</UL>

<P><STRONG><a name="[7d]"></a>HCM_IIC_Write_1Byte</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, i2c_soft.o(i.HCM_IIC_Write_1Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HCM_IIC_Write_1Byte &rArr; I2c_Soft_WaitAsk &rArr; I2c_Soft_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_Soft_WaitAsk
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_Soft_Stop
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_Soft_Start
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_Soft_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_AK8975_Run
</UL>

<P><STRONG><a name="[5]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[df]"></a>Hight_Duty</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, vl53l0.o(i.Hight_Duty))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Hight_Duty &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Duty_20ms
</UL>

<P><STRONG><a name="[f0]"></a>I2c_Soft_Ask</STRONG> (Thumb, 46 bytes, Stack size 4 bytes, i2c_soft.o(i.I2c_Soft_Ask))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = I2c_Soft_Ask
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_Soft_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_Soft_ReadByte
</UL>

<P><STRONG><a name="[99]"></a>I2c_Soft_Init</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, i2c_soft.o(i.I2c_Soft_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = I2c_Soft_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_Init
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_Init
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;All_Init
</UL>

<P><STRONG><a name="[f5]"></a>I2c_Soft_NoAsk</STRONG> (Thumb, 48 bytes, Stack size 4 bytes, i2c_soft.o(i.I2c_Soft_NoAsk))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = I2c_Soft_NoAsk
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_Soft_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_Soft_ReadByte
</UL>

<P><STRONG><a name="[9d]"></a>I2c_Soft_ReadByte</STRONG> (Thumb, 92 bytes, Stack size 12 bytes, i2c_soft.o(i.I2c_Soft_ReadByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2c_Soft_ReadByte &rArr; I2c_Soft_NoAsk
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_Soft_delay
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_Soft_NoAsk
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_Soft_Ask
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_nByte
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_1Byte
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCM_IIC_Read_1Byte
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_ReadOneByte
</UL>

<P><STRONG><a name="[9b]"></a>I2c_Soft_SendByte</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, i2c_soft.o(i.I2c_Soft_SendByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2c_Soft_SendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_Soft_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Write_1Byte
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_nByte
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_1Byte
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCM_IIC_Write_1Byte
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCM_IIC_Read_1Byte
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_WriteOneByte
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_ReadOneByte
</UL>

<P><STRONG><a name="[9a]"></a>I2c_Soft_Start</STRONG> (Thumb, 84 bytes, Stack size 4 bytes, i2c_soft.o(i.I2c_Soft_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = I2c_Soft_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_Soft_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Write_1Byte
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_nByte
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_1Byte
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCM_IIC_Write_1Byte
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCM_IIC_Read_1Byte
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_WriteOneByte
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_ReadOneByte
</UL>

<P><STRONG><a name="[9e]"></a>I2c_Soft_Stop</STRONG> (Thumb, 48 bytes, Stack size 4 bytes, i2c_soft.o(i.I2c_Soft_Stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = I2c_Soft_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_Soft_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Write_1Byte
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_nByte
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_1Byte
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCM_IIC_Write_1Byte
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCM_IIC_Read_1Byte
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_Soft_WaitAsk
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_WriteOneByte
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_ReadOneByte
</UL>

<P><STRONG><a name="[9c]"></a>I2c_Soft_WaitAsk</STRONG> (Thumb, 84 bytes, Stack size 4 bytes, i2c_soft.o(i.I2c_Soft_WaitAsk))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2c_Soft_WaitAsk &rArr; I2c_Soft_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_Soft_delay
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_Soft_Stop
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Write_1Byte
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_nByte
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_1Byte
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCM_IIC_Write_1Byte
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HCM_IIC_Read_1Byte
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_WriteOneByte
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_ReadOneByte
</UL>

<P><STRONG><a name="[f1]"></a>I2c_Soft_delay</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, i2c_soft.o(i.I2c_Soft_delay))
<BR><BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_Soft_NoAsk
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_Soft_Ask
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_Soft_WaitAsk
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_Soft_Stop
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_Soft_Start
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_Soft_SendByte
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_Soft_ReadByte
</UL>

<P><STRONG><a name="[ab]"></a>IIC_ADD_writelen_BYTE</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, 24cxx.o(i.IIC_ADD_writelen_BYTE))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = IIC_ADD_writelen_BYTE &rArr; AT24CXX_WriteOneByte &rArr; Delay_ms &rArr; Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_WriteOneByte
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24cxx_save_PID_shell
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24cxx_save_PID_others
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24cxx_save_PID_hight_Rate
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24cxx_save_PID_hight
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24cxx_save_PID_core
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24cxx_save_PID_CCD
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24cxx_save_Acc_Gyro_offest
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24cxx_save_5883_offest
</UL>

<P><STRONG><a name="[f6]"></a>IIC_Read_1Byte</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, i2c_soft.o(i.IIC_Read_1Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = IIC_Read_1Byte &rArr; I2c_Soft_ReadByte &rArr; I2c_Soft_NoAsk
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_Soft_WaitAsk
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_Soft_Stop
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_Soft_Start
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_Soft_SendByte
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_Soft_ReadByte
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_Init
</UL>

<P><STRONG><a name="[a1]"></a>IIC_Read_MultiBytes</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, 24cxx.o(i.IIC_Read_MultiBytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = IIC_Read_MultiBytes &rArr; AT24CXX_ReadOneByte &rArr; I2c_Soft_ReadByte &rArr; I2c_Soft_NoAsk
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24CXX_ReadOneByte
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24cxx_read_PID_shell
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24cxx_read_PID_others
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24cxx_read_PID_hight_Rate
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24cxx_read_PID_hight
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24cxx_read_PID_core
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24cxx_read_PID_CCD
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24cxx_read_Acc_Gyro_offest
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24cxx_read_5883_offest
</UL>

<P><STRONG><a name="[f7]"></a>IIC_Read_nByte</STRONG> (Thumb, 108 bytes, Stack size 20 bytes, i2c_soft.o(i.IIC_Read_nByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = IIC_Read_nByte &rArr; I2c_Soft_ReadByte &rArr; I2c_Soft_NoAsk
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_Soft_WaitAsk
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_Soft_Stop
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_Soft_Start
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_Soft_SendByte
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_Soft_ReadByte
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_Read
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MS5611_Read_Prom
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IICwriteBits
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IICwriteBit
</UL>

<P><STRONG><a name="[f8]"></a>IIC_Write_1Byte</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, i2c_soft.o(i.IIC_Write_1Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = IIC_Write_1Byte &rArr; I2c_Soft_WaitAsk &rArr; I2c_Soft_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_Soft_WaitAsk
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_Soft_Stop
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_Soft_Start
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_Soft_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_Init
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MS5611_Start_T
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MS5611_Reset
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_set_SMPLRT_DIV
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IICwriteBits
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IICwriteBit
</UL>

<P><STRONG><a name="[f9]"></a>IICwriteBit</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, mpu6050.o(i.IICwriteBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = IICwriteBit &rArr; IIC_Read_nByte &rArr; I2c_Soft_ReadByte &rArr; I2c_Soft_NoAsk
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Write_1Byte
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_nByte
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_setSleepEnabled
</UL>

<P><STRONG><a name="[fa]"></a>IICwriteBits</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, mpu6050.o(i.IICwriteBits))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = IICwriteBits &rArr; IIC_Read_nByte &rArr; I2c_Soft_ReadByte &rArr; I2c_Soft_NoAsk
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Write_1Byte
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_nByte
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_setFullScaleGyroRange
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_setFullScaleAccelRange
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_setDLPF
</UL>

<P><STRONG><a name="[e4]"></a>IMUupdate</STRONG> (Thumb, 3350 bytes, Stack size 80 bytes, imu.o(i.IMUupdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = IMUupdate &rArr; asin &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simple_3d_trans
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_sqrt
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fast_atan2
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmpeq
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Duty_2ms
</UL>

<P><STRONG><a name="[e9]"></a>LED_Duty</STRONG> (Thumb, 328 bytes, Stack size 0 bytes, led.o(i.LED_Duty))
<BR><BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Duty_50ms
</UL>

<P><STRONG><a name="[ba]"></a>LED_Init</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, led.o(i.LED_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LED_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;All_Init
</UL>

<P><STRONG><a name="[c1]"></a>LED_MPU_Err</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, led.o(i.LED_MPU_Err))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LED_MPU_Err &rArr; Delay_ms &rArr; Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;All_Init
</UL>

<P><STRONG><a name="[c3]"></a>LED_MS5611_Err</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, led.o(i.LED_MS5611_Err))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LED_MS5611_Err &rArr; Delay_ms &rArr; Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;All_Init
</UL>

<P><STRONG><a name="[c2]"></a>LED_Mag_Err</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, led.o(i.LED_Mag_Err))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LED_Mag_Err &rArr; Delay_ms &rArr; Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;All_Init
</UL>

<P><STRONG><a name="[165]"></a>Loop_check</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, scheduler.o(i.Loop_check))
<BR><BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_time
</UL>

<P><STRONG><a name="[101]"></a>MPU6050_Data_Offset</STRONG> (Thumb, 552 bytes, Stack size 16 bytes, mpu6050.o(i.MPU6050_Data_Offset))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = MPU6050_Data_Offset &rArr; Param_SaveGyroOffset &rArr; AT24cxx_save_Acc_Gyro_offest &rArr; IIC_ADD_writelen_BYTE &rArr; AT24CXX_WriteOneByte &rArr; Delay_ms &rArr; Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_sqrt
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Param_SaveGyroOffset
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Param_SaveAccelOffset
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_Data_Prepare
</UL>

<P><STRONG><a name="[e3]"></a>MPU6050_Data_Prepare</STRONG> (Thumb, 918 bytes, Stack size 80 bytes, mpu6050.o(i.MPU6050_Data_Prepare))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = MPU6050_Data_Prepare &rArr; MPU6050_Data_Offset &rArr; Param_SaveGyroOffset &rArr; AT24cxx_save_Acc_Gyro_offest &rArr; IIC_ADD_writelen_BYTE &rArr; AT24CXX_WriteOneByte &rArr; Delay_ms &rArr; Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;imuAccIIRLPFilter
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Transform
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_Data_Offset
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Duty_2ms
</UL>

<P><STRONG><a name="[107]"></a>MPU6050_INT_Config</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, mpu6050.o(i.MPU6050_INT_Config))
<BR><BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_Init
</UL>

<P><STRONG><a name="[b9]"></a>MPU6050_Init</STRONG> (Thumb, 192 bytes, Stack size 16 bytes, mpu6050.o(i.MPU6050_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = MPU6050_Init &rArr; MPU6050_setFullScaleGyroRange &rArr; IICwriteBits &rArr; IIC_Read_nByte &rArr; I2c_Soft_ReadByte &rArr; I2c_Soft_NoAsk
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_Soft_Init
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_set_SMPLRT_DIV
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_setSleepEnabled
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_setFullScaleGyroRange
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_setFullScaleAccelRange
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_setDLPF
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_INT_Config
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Write_1Byte
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_1Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;All_Init
</UL>

<P><STRONG><a name="[e2]"></a>MPU6050_Read</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, mpu6050.o(i.MPU6050_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = MPU6050_Read &rArr; IIC_Read_nByte &rArr; I2c_Soft_ReadByte &rArr; I2c_Soft_NoAsk
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_nByte
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Duty_2ms
</UL>

<P><STRONG><a name="[10c]"></a>MPU6050_setDLPF</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, mpu6050.o(i.MPU6050_setDLPF))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = MPU6050_setDLPF &rArr; IICwriteBits &rArr; IIC_Read_nByte &rArr; I2c_Soft_ReadByte &rArr; I2c_Soft_NoAsk
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IICwriteBits
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_Init
</UL>

<P><STRONG><a name="[10b]"></a>MPU6050_setFullScaleAccelRange</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, mpu6050.o(i.MPU6050_setFullScaleAccelRange))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = MPU6050_setFullScaleAccelRange &rArr; IICwriteBits &rArr; IIC_Read_nByte &rArr; I2c_Soft_ReadByte &rArr; I2c_Soft_NoAsk
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IICwriteBits
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_Init
</UL>

<P><STRONG><a name="[10a]"></a>MPU6050_setFullScaleGyroRange</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, mpu6050.o(i.MPU6050_setFullScaleGyroRange))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = MPU6050_setFullScaleGyroRange &rArr; IICwriteBits &rArr; IIC_Read_nByte &rArr; I2c_Soft_ReadByte &rArr; I2c_Soft_NoAsk
</UL>
<BR>[Calls]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IICwriteBits
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_Init
</UL>

<P><STRONG><a name="[108]"></a>MPU6050_setSleepEnabled</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, mpu6050.o(i.MPU6050_setSleepEnabled))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = MPU6050_setSleepEnabled &rArr; IICwriteBit &rArr; IIC_Read_nByte &rArr; I2c_Soft_ReadByte &rArr; I2c_Soft_NoAsk
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IICwriteBit
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_Init
</UL>

<P><STRONG><a name="[109]"></a>MPU6050_set_SMPLRT_DIV</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, mpu6050.o(i.MPU6050_set_SMPLRT_DIV))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = MPU6050_set_SMPLRT_DIV &rArr; IIC_Write_1Byte &rArr; I2c_Soft_WaitAsk &rArr; I2c_Soft_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Write_1Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_Init
</UL>

<P><STRONG><a name="[b8]"></a>MS5611_Init</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, ms5611.o(i.MS5611_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = MS5611_Init &rArr; MS5611_Read_Prom &rArr; IIC_Read_nByte &rArr; I2c_Soft_ReadByte &rArr; I2c_Soft_NoAsk
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MS5611_Start_T
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MS5611_Reset
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MS5611_Read_Prom
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;All_Init
</UL>

<P><STRONG><a name="[10e]"></a>MS5611_Read_Prom</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, ms5611.o(i.MS5611_Read_Prom))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = MS5611_Read_Prom &rArr; IIC_Read_nByte &rArr; I2c_Soft_ReadByte &rArr; I2c_Soft_NoAsk
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Read_nByte
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MS5611_Init
</UL>

<P><STRONG><a name="[10d]"></a>MS5611_Reset</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ms5611.o(i.MS5611_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = MS5611_Reset &rArr; IIC_Write_1Byte &rArr; I2c_Soft_WaitAsk &rArr; I2c_Soft_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Write_1Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MS5611_Init
</UL>

<P><STRONG><a name="[10f]"></a>MS5611_Start_T</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ms5611.o(i.MS5611_Start_T))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = MS5611_Start_T &rArr; IIC_Write_1Byte &rArr; I2c_Soft_WaitAsk &rArr; I2c_Soft_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IIC_Write_1Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MS5611_Init
</UL>

<P><STRONG><a name="[6]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[110]"></a>Mode_3_duty</STRONG> (Thumb, 562 bytes, Stack size 32 bytes, trance.o(i.Mode_3_duty))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Mode_3_duty &rArr; mode3_flight_duty &rArr; Direction_flight &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode3_flight_duty
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_shell_pid
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;direction_control
</UL>

<P><STRONG><a name="[4]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[118]"></a>NVIC_Init</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, misc.o(i.NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_init
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart1_Init
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3_Init
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2_Init
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Out_Init
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_IN_Init
</UL>

<P><STRONG><a name="[b4]"></a>NVIC_PriorityGroupConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, misc.o(i.NVIC_PriorityGroupConfig))
<BR><BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;All_Init
</UL>

<P><STRONG><a name="[db]"></a>Openmv_DT_Data_Receive_Anl</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, data_transfer.o(i.Openmv_DT_Data_Receive_Anl))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = Openmv_DT_Data_Receive_Anl &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_string
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_deathzoom
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Duty_10ms
</UL>

<P><STRONG><a name="[113]"></a>Openmv_Data_Receive_Prepare</STRONG> (Thumb, 142 bytes, Stack size 8 bytes, data_transfer.o(i.Openmv_Data_Receive_Prepare))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Openmv_Data_Receive_Prepare &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
</UL>

<P><STRONG><a name="[91]"></a>PID_Para_Init</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, parameter.o(i.PID_Para_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = PID_Para_Init &rArr; h_pid_init &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;h_pid_init
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ctrl_Para_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Para_ResetToFactorySetup
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_DT_Data_Receive_Anl
</UL>

<P><STRONG><a name="[b6]"></a>PWM_IN_Init</STRONG> (Thumb, 690 bytes, Stack size 48 bytes, pwm_in.o(i.PWM_IN_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = PWM_IN_Init &rArr; TIM_ICInit &rArr; TI4_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinRemapConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;All_Init
</UL>

<P><STRONG><a name="[b7]"></a>PWM_Out_Init</STRONG> (Thumb, 284 bytes, Stack size 48 bytes, pwm_out.o(i.PWM_Out_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = PWM_Out_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseStructInit
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OCStructInit
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC4PreloadConfig
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC4Init
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC3PreloadConfig
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC3Init
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC2PreloadConfig
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC2Init
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1PreloadConfig
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1Init
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ARRPreloadConfig
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;All_Init
</UL>

<P><STRONG><a name="[be]"></a>Para_Init</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, parameter.o(i.Para_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Para_Init &rArr; AT24cxx_read_PID_shell &rArr; IIC_Read_MultiBytes &rArr; AT24CXX_ReadOneByte &rArr; I2c_Soft_ReadByte &rArr; I2c_Soft_NoAsk
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24cxx_read_PID_shell
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24cxx_read_PID_others
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24cxx_read_PID_hight_Rate
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24cxx_read_PID_hight
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24cxx_read_PID_core
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24cxx_read_PID_CCD
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24cxx_read_Acc_Gyro_offest
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24cxx_read_5883_offest
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;All_Init
</UL>

<P><STRONG><a name="[8c]"></a>Para_ResetToFactorySetup</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, parameter.o(i.Para_ResetToFactorySetup))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Para_ResetToFactorySetup &rArr; PID_Para_Init &rArr; h_pid_init &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Para_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_DT_Data_Receive_Anl
</UL>

<P><STRONG><a name="[102]"></a>Param_SaveAccelOffset</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, parameter.o(i.Param_SaveAccelOffset))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = Param_SaveAccelOffset &rArr; AT24cxx_save_Acc_Gyro_offest &rArr; IIC_ADD_writelen_BYTE &rArr; AT24CXX_WriteOneByte &rArr; Delay_ms &rArr; Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24cxx_save_Acc_Gyro_offest
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_Data_Offset
</UL>

<P><STRONG><a name="[103]"></a>Param_SaveGyroOffset</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, parameter.o(i.Param_SaveGyroOffset))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = Param_SaveGyroOffset &rArr; AT24cxx_save_Acc_Gyro_offest &rArr; IIC_ADD_writelen_BYTE &rArr; AT24CXX_WriteOneByte &rArr; Delay_ms &rArr; Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24cxx_save_Acc_Gyro_offest
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_Data_Offset
</UL>

<P><STRONG><a name="[78]"></a>Param_SaveMagOffset</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, parameter.o(i.Param_SaveMagOffset))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = Param_SaveMagOffset &rArr; AT24cxx_save_5883_offest &rArr; IIC_ADD_writelen_BYTE &rArr; AT24CXX_WriteOneByte &rArr; Delay_ms &rArr; Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24cxx_save_5883_offest
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_AK8975_CalOffset_Mag
</UL>

<P><STRONG><a name="[128]"></a>Param_SavePID</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, parameter.o(i.Param_SavePID))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = Param_SavePID &rArr; AT24cxx_save_PID_shell &rArr; IIC_ADD_writelen_BYTE &rArr; AT24CXX_WriteOneByte &rArr; Delay_ms &rArr; Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24cxx_save_PID_shell
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24cxx_save_PID_others
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24cxx_save_PID_hight_Rate
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24cxx_save_PID_hight
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24cxx_save_PID_core
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24cxx_save_PID_CCD
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parameter_Save
</UL>

<P><STRONG><a name="[e0]"></a>Parameter_Save</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, parameter.o(i.Parameter_Save))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = Parameter_Save &rArr; Param_SavePID &rArr; AT24cxx_save_PID_shell &rArr; IIC_ADD_writelen_BYTE &rArr; AT24CXX_WriteOneByte &rArr; Delay_ms &rArr; Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Param_SavePID
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Duty_20ms
</UL>

<P><STRONG><a name="[b]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[116]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3_Init
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2_Init
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Out_Init
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_IN_Init
</UL>

<P><STRONG><a name="[f2]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switch_init
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;light_sound_init
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart1_Init
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3_Init
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2_Init
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Out_Init
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_IN_Init
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2c_Soft_Init
</UL>

<P><STRONG><a name="[12c]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 192 bytes, Stack size 12 bytes, stm32f10x_rcc.o(i.RCC_GetClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Configuration
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[e5]"></a>RC_Duty</STRONG> (Thumb, 1130 bytes, Stack size 56 bytes, rc.o(i.RC_Duty))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = RC_Duty &rArr; Fly_Ready &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fly_Ready
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CH_Mapping_Fun
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Duty_2ms
</UL>

<P><STRONG><a name="[9]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[c7]"></a>SetPwm</STRONG> (Thumb, 120 bytes, Stack size 20 bytes, pwm_out.o(i.SetPwm))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SetPwm
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;All_Out
</UL>

<P><STRONG><a name="[12d]"></a>SysTick_CLKSourceConfig</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, misc.o(i.SysTick_CLKSourceConfig))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Configuration
</UL>

<P><STRONG><a name="[b5]"></a>SysTick_Configuration</STRONG> (Thumb, 104 bytes, Stack size 40 bytes, time.o(i.SysTick_Configuration))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = SysTick_Configuration &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_CLKSourceConfig
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;All_Init
</UL>

<P><STRONG><a name="[c]"></a>SysTick_Handler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, stm32f10x_it.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SysTick_Handler &rArr; sys_time
</UL>
<BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_time
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>SystemInit</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, system_stm32f10x.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SystemInit &rArr; SetSysClock &rArr; SetSysClockTo72
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(.text)
</UL>
<P><STRONG><a name="[2b]"></a>TIM4_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32f10x_it.o(i.TIM4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM4_IRQHandler &rArr; _TIM4_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TIM4_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32f10x_it.o(i.TIM8_CC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM8_CC_IRQHandler &rArr; _TIM8_CC_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TIM8_CC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[127]"></a>TIM_ARRPreloadConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_ARRPreloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Out_Init
</UL>

<P><STRONG><a name="[11b]"></a>TIM_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Out_Init
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_IN_Init
</UL>

<P><STRONG><a name="[141]"></a>TIM_GetCapture1</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_GetCapture1))
<BR><BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TIM8_CC_IRQHandler
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TIM4_IRQHandler
</UL>

<P><STRONG><a name="[143]"></a>TIM_GetCapture2</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_GetCapture2))
<BR><BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TIM8_CC_IRQHandler
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TIM4_IRQHandler
</UL>

<P><STRONG><a name="[145]"></a>TIM_GetCapture3</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_GetCapture3))
<BR><BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TIM8_CC_IRQHandler
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TIM4_IRQHandler
</UL>

<P><STRONG><a name="[147]"></a>TIM_GetCapture4</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_GetCapture4))
<BR><BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TIM8_CC_IRQHandler
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TIM4_IRQHandler
</UL>

<P><STRONG><a name="[11a]"></a>TIM_ICInit</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, stm32f10x_tim.o(i.TIM_ICInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = TIM_ICInit &rArr; TI4_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC4Prescaler
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC3Prescaler
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC2Prescaler
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetIC1Prescaler
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI4_Config
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI3_Config
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI2_Config
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI1_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_IN_Init
</UL>

<P><STRONG><a name="[11c]"></a>TIM_ITConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_IN_Init
</UL>

<P><STRONG><a name="[11f]"></a>TIM_OC1Init</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, stm32f10x_tim.o(i.TIM_OC1Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_OC1Init
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Out_Init
</UL>

<P><STRONG><a name="[142]"></a>TIM_OC1PolarityConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_OC1PolarityConfig))
<BR><BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TIM8_CC_IRQHandler
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TIM4_IRQHandler
</UL>

<P><STRONG><a name="[120]"></a>TIM_OC1PreloadConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_OC1PreloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Out_Init
</UL>

<P><STRONG><a name="[121]"></a>TIM_OC2Init</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, stm32f10x_tim.o(i.TIM_OC2Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_OC2Init
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Out_Init
</UL>

<P><STRONG><a name="[144]"></a>TIM_OC2PolarityConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_OC2PolarityConfig))
<BR><BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TIM8_CC_IRQHandler
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TIM4_IRQHandler
</UL>

<P><STRONG><a name="[122]"></a>TIM_OC2PreloadConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_OC2PreloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Out_Init
</UL>

<P><STRONG><a name="[123]"></a>TIM_OC3Init</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, stm32f10x_tim.o(i.TIM_OC3Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_OC3Init
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Out_Init
</UL>

<P><STRONG><a name="[146]"></a>TIM_OC3PolarityConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_OC3PolarityConfig))
<BR><BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TIM8_CC_IRQHandler
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TIM4_IRQHandler
</UL>

<P><STRONG><a name="[124]"></a>TIM_OC3PreloadConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_OC3PreloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Out_Init
</UL>

<P><STRONG><a name="[125]"></a>TIM_OC4Init</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, stm32f10x_tim.o(i.TIM_OC4Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_OC4Init
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Out_Init
</UL>

<P><STRONG><a name="[148]"></a>TIM_OC4PolarityConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_OC4PolarityConfig))
<BR><BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TIM8_CC_IRQHandler
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TIM4_IRQHandler
</UL>

<P><STRONG><a name="[126]"></a>TIM_OC4PreloadConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_OC4PreloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Out_Init
</UL>

<P><STRONG><a name="[11e]"></a>TIM_OCStructInit</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_OCStructInit))
<BR><BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Out_Init
</UL>

<P><STRONG><a name="[132]"></a>TIM_SetIC1Prescaler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_SetIC1Prescaler))
<BR><BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[134]"></a>TIM_SetIC2Prescaler</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_SetIC2Prescaler))
<BR><BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[136]"></a>TIM_SetIC3Prescaler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_SetIC3Prescaler))
<BR><BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[138]"></a>TIM_SetIC4Prescaler</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_SetIC4Prescaler))
<BR><BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[119]"></a>TIM_TimeBaseInit</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_TimeBaseInit))
<BR><BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Out_Init
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_IN_Init
</UL>

<P><STRONG><a name="[11d]"></a>TIM_TimeBaseStructInit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_tim.o(i.TIM_TimeBaseStructInit))
<BR><BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Out_Init
</UL>

<P><STRONG><a name="[d6]"></a>To_180_degrees</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, mymath.o(i.To_180_degrees))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = To_180_degrees &rArr; __aeabi_cfcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTRL_2
</UL>

<P><STRONG><a name="[106]"></a>Transform</STRONG> (Thumb, 14 bytes, Stack size 12 bytes, mpu6050.o(i.Transform))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Transform
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_Data_Prepare
</UL>

<P><STRONG><a name="[42]"></a>UART5_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x_it.o(i.UART5_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>USART1_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32f10x_it.o(i.USART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = USART1_IRQHandler &rArr; Usart1_IRQ &rArr; ANO_DT_Data_Receive_Prepare &rArr; ANO_DT_Data_Receive_Anl &rArr; Para_ResetToFactorySetup &rArr; PID_Para_Init &rArr; h_pid_init &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart1_IRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>USART2_IRQHandler</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, usart.o(i.USART2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = USART2_IRQHandler &rArr; AnoOF_GetOneByte &rArr; AnoOF_DataAnl &rArr; Get_Cycle_T &rArr; __aeabi_f2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Cycle_T
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnoOF_GetOneByte
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearITPendingBit
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>USART3_IRQHandler</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, usart.o(i.USART3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USART3_IRQHandler &rArr; USART_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Openmv_Data_Receive_Prepare
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearITPendingBit
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[13d]"></a>USART_ClearFlag</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
</UL>

<P><STRONG><a name="[13b]"></a>USART_ClearITPendingBit</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32f10x_usart.o(i.USART_ClearITPendingBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart1_IRQ
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[140]"></a>USART_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart1_Init
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3_Init
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2_Init
</UL>

<P><STRONG><a name="[13c]"></a>USART_GetFlagStatus</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f10x_usart.o(i.USART_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
</UL>

<P><STRONG><a name="[13a]"></a>USART_GetITStatus</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, stm32f10x_usart.o(i.USART_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USART_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart1_IRQ
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
</UL>

<P><STRONG><a name="[13f]"></a>USART_ITConfig</STRONG> (Thumb, 74 bytes, Stack size 20 bytes, stm32f10x_usart.o(i.USART_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart1_Init
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3_Init
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2_Init
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart1_Send
</UL>

<P><STRONG><a name="[13e]"></a>USART_Init</STRONG> (Thumb, 210 bytes, Stack size 56 bytes, stm32f10x_usart.o(i.USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usart1_Init
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart3_Init
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2_Init
</UL>

<P><STRONG><a name="[bc]"></a>Uart2_Init</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, usart.o(i.Uart2_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = Uart2_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinRemapConfig
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;All_Init
</UL>

<P><STRONG><a name="[bd]"></a>Uart3_Init</STRONG> (Thumb, 182 bytes, Stack size 32 bytes, usart.o(i.Uart3_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = Uart3_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinRemapConfig
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;All_Init
</UL>

<P><STRONG><a name="[8]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x_it.o(i.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f10x_hd.o(RESET)
</UL>
<P><STRONG><a name="[139]"></a>Usart1_IRQ</STRONG> (Thumb, 120 bytes, Stack size 8 bytes, usart.o(i.Usart1_IRQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Usart1_IRQ &rArr; ANO_DT_Data_Receive_Prepare &rArr; ANO_DT_Data_Receive_Anl &rArr; Para_ResetToFactorySetup &rArr; PID_Para_Init &rArr; h_pid_init &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_DT_Data_Receive_Prepare
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[bb]"></a>Usart1_Init</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, usart.o(i.Usart1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = Usart1_Init &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;All_Init
</UL>

<P><STRONG><a name="[94]"></a>Usart1_Send</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, usart.o(i.Usart1_Send))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Usart1_Send &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_DT_Send_Data
</UL>

<P><STRONG><a name="[12f]"></a>_TIM4_IRQHandler</STRONG> (Thumb, 618 bytes, Stack size 8 bytes, pwm_in.o(i._TIM4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _TIM4_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Feed_Rc_Dog
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC4PolarityConfig
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC3PolarityConfig
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC2PolarityConfig
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1PolarityConfig
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetCapture4
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetCapture3
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetCapture2
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetCapture1
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>

<P><STRONG><a name="[130]"></a>_TIM8_CC_IRQHandler</STRONG> (Thumb, 618 bytes, Stack size 8 bytes, pwm_in.o(i._TIM8_CC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _TIM8_CC_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Feed_Rc_Dog
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC4PolarityConfig
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC3PolarityConfig
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC2PolarityConfig
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1PolarityConfig
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetCapture4
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetCapture3
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetCapture2
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetCapture1
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM8_CC_IRQHandler
</UL>

<P><STRONG><a name="[154]"></a>__ARM_fpclassify</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[166]"></a>__ARM_fpclassifyf</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, fpclassifyf.o(i.__ARM_fpclassifyf))
<BR><BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tanf
</UL>

<P><STRONG><a name="[149]"></a>__kernel_poly</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, poly.o(i.__kernel_poly))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[14a]"></a>__mathlib_dbl_infnan</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_infnan))
<BR><BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[14c]"></a>__mathlib_dbl_invalid</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_invalid))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __mathlib_dbl_invalid &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[14e]"></a>__mathlib_dbl_underflow</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_underflow))
<BR><BR>[Calls]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[14f]"></a>__mathlib_flt_infnan</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, funder.o(i.__mathlib_flt_infnan))
<BR><BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tanf
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cosf
</UL>

<P><STRONG><a name="[151]"></a>__mathlib_flt_invalid</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, funder.o(i.__mathlib_flt_invalid))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __mathlib_flt_invalid &rArr; __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tanf
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cosf
</UL>

<P><STRONG><a name="[152]"></a>__mathlib_flt_underflow</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, funder.o(i.__mathlib_flt_underflow))
<BR><BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tanf
</UL>

<P><STRONG><a name="[153]"></a>__mathlib_rredf2</STRONG> (Thumb, 344 bytes, Stack size 32 bytes, rredf.o(i.__mathlib_rredf2))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __mathlib_rredf2 &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tanf
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cosf
</UL>

<P><STRONG><a name="[100]"></a>asin</STRONG> (Thumb, 572 bytes, Stack size 56 bytes, asin.o(i.asin))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = asin &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUupdate
</UL>

<P><STRONG><a name="[111]"></a>camera_shell_pid</STRONG> (Thumb, 446 bytes, Stack size 8 bytes, trance.o(i.camera_shell_pid))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = camera_shell_pid &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode3_flight_duty
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mode_3_duty
</UL>

<P><STRONG><a name="[157]"></a>cosf</STRONG> (Thumb, 328 bytes, Stack size 32 bytes, cosf.o(i.cosf))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = cosf &rArr; __mathlib_rredf2 &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_rredf2
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_invalid
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_infnan
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frnd
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lpf2pSetCutoffFreq
</UL>

<P><STRONG><a name="[d1]"></a>direction_control</STRONG> (Thumb, 334 bytes, Stack size 24 bytes, trance.o(i.direction_control))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = direction_control &rArr; Mode_3_duty &rArr; mode3_flight_duty &rArr; Direction_flight &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_deathzoom
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mode_3_duty
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTRL_2
</UL>

<P><STRONG><a name="[ff]"></a>fast_atan2</STRONG> (Thumb, 344 bytes, Stack size 48 bytes, mymath.o(i.fast_atan2))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = fast_atan2 &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_abs
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmpeq
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUupdate
</UL>

<P><STRONG><a name="[115]"></a>h_pid_init</STRONG> (Thumb, 162 bytes, Stack size 8 bytes, height_ctrl.o(i.h_pid_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = h_pid_init &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Para_Init
</UL>

<P><STRONG><a name="[15a]"></a>hight_ctrl</STRONG> (Thumb, 200 bytes, Stack size 16 bytes, ultrasonic.o(i.hight_ctrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = hight_ctrl &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myself_Thr_Ctrl
</UL>

<P><STRONG><a name="[15b]"></a>iirLPFilterSingle</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, filter.o(i.iirLPFilterSingle))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = iirLPFilterSingle
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;imuAccIIRLPFilter
</UL>

<P><STRONG><a name="[105]"></a>imuAccIIRLPFilter</STRONG> (Thumb, 56 bytes, Stack size 20 bytes, filter.o(i.imuAccIIRLPFilter))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = imuAccIIRLPFilter &rArr; iirLPFilterSingle
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;iirLPFilterSingle
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_Data_Prepare
</UL>

<P><STRONG><a name="[de]"></a>inav_calution</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, inav.o(i.inav_calution))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = inav_calution &rArr; inav_correct &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inav_predict
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inav_correct
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Duty_20ms
</UL>

<P><STRONG><a name="[15d]"></a>inav_correct</STRONG> (Thumb, 110 bytes, Stack size 56 bytes, inav.o(i.inav_correct))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = inav_correct &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmpeq
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abs
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inav_calution
</UL>

<P><STRONG><a name="[15c]"></a>inav_predict</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, inav.o(i.inav_predict))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = inav_predict &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmpeq
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inav_calution
</UL>

<P><STRONG><a name="[bf]"></a>light_sound_init</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, warn.o(i.light_sound_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = light_sound_init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;All_Init
</UL>

<P><STRONG><a name="[c5]"></a>lpf2pInit</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, filter.o(i.lpf2pInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = lpf2pInit &rArr; lpf2pSetCutoffFreq &rArr; tanf &rArr; __mathlib_rredf2 &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lpf2pSetCutoffFreq
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;All_Init
</UL>

<P><STRONG><a name="[160]"></a>lpf2pSetCutoffFreq</STRONG> (Thumb, 234 bytes, Stack size 56 bytes, filter.o(i.lpf2pSetCutoffFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = lpf2pSetCutoffFreq &rArr; tanf &rArr; __mathlib_rredf2 &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tanf
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cosf
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lpf2pInit
</UL>

<P><STRONG><a name="[5c]"></a>main</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = main &rArr; Duty_Loop &rArr; Duty_10ms &rArr; Openmv_DT_Data_Receive_Anl &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_string
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Duty_Loop
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;All_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[112]"></a>mode3_flight_duty</STRONG> (Thumb, 280 bytes, Stack size 16 bytes, trance.o(i.mode3_flight_duty))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = mode3_flight_duty &rArr; Direction_flight &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_shell_pid
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Direction_flight
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mode_3_duty
</UL>

<P><STRONG><a name="[e8]"></a>mode_check</STRONG> (Thumb, 230 bytes, Stack size 16 bytes, fly_mode.o(i.mode_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = mode_check &rArr; __aeabi_cfcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Duty_50ms
</UL>

<P><STRONG><a name="[159]"></a>my_abs</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, mymath.o(i.my_abs))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = my_abs
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fast_atan2
</UL>

<P><STRONG><a name="[d2]"></a>my_deathzoom</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, mymath.o(i.my_deathzoom))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = my_deathzoom &rArr; __aeabi_cfcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;direction_control
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Openmv_DT_Data_Receive_Anl
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTRL_2
</UL>

<P><STRONG><a name="[d3]"></a>my_deathzoom_2</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, mymath.o(i.my_deathzoom_2))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = my_deathzoom_2 &rArr; __aeabi_cfcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTRL_2
</UL>

<P><STRONG><a name="[fc]"></a>my_sqrt</STRONG> (Thumb, 114 bytes, Stack size 40 bytes, mymath.o(i.my_sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = my_sqrt &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simple_3d_trans
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUupdate
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_Data_Offset
</UL>

<P><STRONG><a name="[cf]"></a>myself_Thr_Ctrl</STRONG> (Thumb, 560 bytes, Stack size 24 bytes, ctrl.o(i.myself_Thr_Ctrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = myself_Thr_Ctrl &rArr; hight_ctrl &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hight_ctrl
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTRL_1
</UL>

<P><STRONG><a name="[e7]"></a>set_light_sound</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, warn.o(i.set_light_sound))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = set_light_sound
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Duty_50ms
</UL>

<P><STRONG><a name="[fe]"></a>simple_3d_trans</STRONG> (Thumb, 252 bytes, Stack size 32 bytes, filter.o(i.simple_3d_trans))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = simple_3d_trans &rArr; my_sqrt &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_sqrt
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUupdate
</UL>

<P><STRONG><a name="[fb]"></a>sqrt</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, sqrt.o(i.sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUupdate
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[c0]"></a>switch_init</STRONG> (Thumb, 204 bytes, Stack size 24 bytes, warn.o(i.switch_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = switch_init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_EXTILineConfig
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;All_Init
</UL>

<P><STRONG><a name="[12e]"></a>sys_time</STRONG> (Thumb, 126 bytes, Stack size 8 bytes, time.o(i.sys_time))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sys_time
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Loop_check
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[161]"></a>tanf</STRONG> (Thumb, 314 bytes, Stack size 32 bytes, tanf.o(i.tanf))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = tanf &rArr; __mathlib_rredf2 &rArr; __aeabi_fmul
</UL>
<BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_rredf2
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_underflow
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_invalid
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_infnan
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassifyf
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frnd
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lpf2pSetCutoffFreq
</UL>

<P><STRONG><a name="[4f]"></a>_get_lc_ctype</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lc_ctype_c.o(locale$$code))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _get_lc_ctype
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_ctype_2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_ctype_table.o(.text)
</UL>
<P><STRONG><a name="[90]"></a>__aeabi_d2f</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, d2f.o(x$fpl$d2f))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUupdate
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTRL_2
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_DT_Data_Receive_Anl
</UL>

<P><STRONG><a name="[168]"></a>_d2f</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, d2f.o(x$fpl$d2f), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[d5]"></a>__aeabi_dadd</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, daddsub_clz.o(x$fpl$dadd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTRL_2
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[16b]"></a>_dadd</STRONG> (Thumb, 332 bytes, Stack size 16 bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
</UL>

<P><STRONG><a name="[16e]"></a>__fpl_dcheck_NaN1</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dcheck1.o(x$fpl$dcheck1))
<BR><BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>

<P><STRONG><a name="[14d]"></a>__aeabi_ddiv</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, ddiv.o(x$fpl$ddiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[170]"></a>_ddiv</STRONG> (Thumb, 552 bytes, Stack size 32 bytes, ddiv.o(x$fpl$ddiv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[8e]"></a>__aeabi_i2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dflt))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_DT_Data_Receive_Anl
</UL>

<P><STRONG><a name="[1b8]"></a>_dflt</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dflt), UNUSED)

<P><STRONG><a name="[8f]"></a>__aeabi_dmul</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dmul.o(x$fpl$dmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUupdate
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTRL_2
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_DT_Data_Receive_Anl
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[171]"></a>_dmul</STRONG> (Thumb, 332 bytes, Stack size 32 bytes, dmul.o(x$fpl$dmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[16a]"></a>__fpl_dnaninf</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, dnaninf.o(x$fpl$dnaninf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __fpl_dnaninf
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
</UL>

<P><STRONG><a name="[16d]"></a>__fpl_dretinf</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dretinf.o(x$fpl$dretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[155]"></a>__aeabi_drsub</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$drsb))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[172]"></a>_drsb</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$drsb), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[162]"></a>_dsqrt</STRONG> (Thumb, 456 bytes, Stack size 24 bytes, dsqrt_noumaal.o(x$fpl$dsqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>

<P><STRONG><a name="[156]"></a>__aeabi_dsub</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, daddsub_clz.o(x$fpl$dsub))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_dsub
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[174]"></a>_dsub</STRONG> (Thumb, 464 bytes, Stack size 32 bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[d4]"></a>__aeabi_f2d</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, f2d.o(x$fpl$f2d))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_f2d
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUupdate
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTRL_2
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inav_correct
</UL>

<P><STRONG><a name="[175]"></a>_f2d</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, f2d.o(x$fpl$f2d), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
</UL>

<P><STRONG><a name="[73]"></a>__aeabi_fadd</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, faddsub_clz.o(x$fpl$fadd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simple_3d_trans
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fast_atan2
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_deathzoom_2
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_deathzoom
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hight_ctrl
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;direction_control
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;To_180_degrees
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myself_Thr_Ctrl
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;All_Out
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RC_Duty
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_Data_Prepare
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUupdate
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hight_Duty
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTRL_2
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTRL_1
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CALIBRATE_duty
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Auto_switch_2
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inav_predict
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inav_correct
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode3_flight_duty
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_shell_pid
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mode_3_duty
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Direction_flight
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lpf2pSetCutoffFreq
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fly_Ready
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnoOF_DataAnl
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_AK8975_CalOffset_Mag
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_rredf2
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tanf
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cosf
</UL>

<P><STRONG><a name="[177]"></a>_fadd</STRONG> (Thumb, 196 bytes, Stack size 16 bytes, faddsub_clz.o(x$fpl$fadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub1
</UL>

<P><STRONG><a name="[179]"></a>__fpl_fcheck_NaN1</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fcheck1.o(x$fpl$fcheck1))
<BR><BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
</UL>

<P><STRONG><a name="[17c]"></a>__fpl_fcmp_Inf</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, fcmpi.o(x$fpl$fcmpinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmple
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmpeq
</UL>

<P><STRONG><a name="[77]"></a>__aeabi_fdiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, fdiv.o(x$fpl$fdiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fast_atan2
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;direction_control
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myself_Thr_Ctrl
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24cxx_read_PID_shell
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24cxx_read_PID_others
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24cxx_read_PID_hight_Rate
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24cxx_read_PID_hight
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24cxx_read_PID_core
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24cxx_read_PID_CCD
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24cxx_read_Acc_Gyro_offest
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inav_calution
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RC_Duty
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_Data_Prepare
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUupdate
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hight_Duty
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTRL_2
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTRL_1
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Duty_5ms
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Duty_2ms
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Duty_20ms
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Duty_1ms
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inav_predict
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lpf2pSetCutoffFreq
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_Data_Offset
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnoOF_DataAnl
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_AK8975_CalOffset_Mag
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_invalid
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tanf
</UL>

<P><STRONG><a name="[17a]"></a>_fdiv</STRONG> (Thumb, 384 bytes, Stack size 16 bytes, fdiv.o(x$fpl$fdiv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[fd]"></a>__aeabi_cfcmpeq</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, feqf.o(x$fpl$feqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_cfcmpeq
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fast_atan2
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUupdate
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inav_predict
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inav_correct
</UL>

<P><STRONG><a name="[17b]"></a>_fcmpeq</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, feqf.o(x$fpl$feqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_Inf
</UL>

<P><STRONG><a name="[75]"></a>__aeabi_f2iz</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, ffix.o(x$fpl$ffix))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_f2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fast_atan2
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myself_Thr_Ctrl
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;All_Out
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24cxx_save_Acc_Gyro_offest
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_check
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RC_Duty
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Openmv_DT_Data_Receive_Anl
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_Data_Prepare
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTRL_2
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_DT_Data_Exchange
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fly_Ready
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_DT_Send_User
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_DT_Send_Status
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_DT_Send_Speed
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_DT_Send_PID
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_AK8975_CalOffset_Mag
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tanf
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cosf
</UL>

<P><STRONG><a name="[17d]"></a>_ffix</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, ffix.o(x$fpl$ffix), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[87]"></a>__aeabi_f2uiz</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, ffixu.o(x$fpl$ffixu))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_f2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24cxx_save_PID_shell
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24cxx_save_PID_others
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24cxx_save_PID_hight_Rate
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24cxx_save_PID_hight
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24cxx_save_PID_core
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24cxx_save_PID_CCD
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24cxx_save_5883_offest
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Cycle_T
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_DT_Data_Exchange
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode3_flight_duty
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Direction_flight
</UL>

<P><STRONG><a name="[17e]"></a>_ffixu</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, ffixu.o(x$fpl$ffixu), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[70]"></a>__aeabi_i2f</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$fflt))
<BR><BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simple_3d_trans
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fast_atan2
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myself_Thr_Ctrl
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24cxx_read_Acc_Gyro_offest
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24cxx_read_5883_offest
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inav_calution
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RC_Duty
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Openmv_DT_Data_Receive_Anl
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_Data_Prepare
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTRL_2
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inav_correct
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_shell_pid
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fly_Ready
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_Data_Offset
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnoOF_DataAnl
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_AK8975_Read_Mag_Data
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_AK8975_CalOffset_Mag
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_rredf2
</UL>

<P><STRONG><a name="[1b9]"></a>_fflt</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$fflt), UNUSED)

<P><STRONG><a name="[a4]"></a>__aeabi_ui2f</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$ffltu))
<BR><BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hight_ctrl
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24cxx_read_PID_shell
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24cxx_read_PID_others
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24cxx_read_PID_hight_Rate
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24cxx_read_PID_hight
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24cxx_read_PID_core
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24cxx_read_PID_CCD
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hight_Duty
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Cycle_T
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Duty_5ms
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Duty_2ms
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Duty_20ms
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Duty_1ms
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Direction_flight
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnoOF_DataAnl
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_rredf2
</UL>

<P><STRONG><a name="[1ba]"></a>_ffltu</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, fflt_clz.o(x$fpl$ffltu), UNUSED)

<P><STRONG><a name="[72]"></a>__aeabi_cfcmple</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, fleqf.o(x$fpl$fleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_cfcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simple_3d_trans
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fast_atan2
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_deathzoom_2
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_deathzoom
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hight_ctrl
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;direction_control
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;To_180_degrees
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myself_Thr_Ctrl
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;All_Out
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_check
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RC_Duty
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUupdate
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTRL_2
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTRL_1
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Auto_switch_2
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lpf2pInit
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inav_predict
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode3_flight_duty
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_shell_pid
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Direction_flight
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fly_Ready
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_Data_Offset
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnoOF_DataAnl
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_AK8975_CalOffset_Mag
</UL>

<P><STRONG><a name="[17f]"></a>_fcmple</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, fleqf.o(x$fpl$fleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_Inf
</UL>

<P><STRONG><a name="[182]"></a>__fpl_fcmple_InfNaN</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fleqf.o(x$fpl$fleqf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frcmple
</UL>

<P><STRONG><a name="[74]"></a>__aeabi_fmul</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, fmul.o(x$fpl$fmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simple_3d_trans
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_sqrt
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fast_atan2
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hight_ctrl
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;direction_control
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myself_Thr_Ctrl
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;All_Out
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;h_pid_init
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24cxx_save_PID_shell
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24cxx_save_PID_others
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24cxx_save_PID_hight_Rate
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24cxx_save_PID_hight
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24cxx_save_PID_core
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24cxx_save_PID_CCD
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT24cxx_save_Acc_Gyro_offest
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RC_Duty
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_Data_Prepare
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUupdate
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTRL_2
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTRL_1
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Duty_2ms
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;All_Init
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inav_predict
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inav_correct
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode3_flight_duty
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_shell_pid
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mode_3_duty
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Direction_flight
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lpf2pSetCutoffFreq
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fly_Ready
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_DT_Send_User
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_DT_Send_Status
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_DT_Send_Speed
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_DT_Send_PID
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnoOF_DataAnl
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_AK8975_CalOffset_Mag
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_rredf2
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tanf
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cosf
</UL>

<P><STRONG><a name="[180]"></a>_fmul</STRONG> (Thumb, 258 bytes, Stack size 16 bytes, fmul.o(x$fpl$fmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>

<P><STRONG><a name="[176]"></a>__fpl_fnaninf</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, fnaninf.o(x$fpl$fnaninf))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __fpl_fnaninf
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frnd
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fmul
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmple
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ffixu
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ffix
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fcmpeq
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fdiv
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d
</UL>

<P><STRONG><a name="[169]"></a>__fpl_fretinf</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fretinf.o(x$fpl$fretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fmul
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fdiv
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
</UL>

<P><STRONG><a name="[71]"></a>__aeabi_cfrcmple</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, frleqf.o(x$fpl$frleqf))
<BR><BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_abs
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fast_atan2
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_deathzoom_2
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_deathzoom
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hight_ctrl
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;direction_control
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;To_180_degrees
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myself_Thr_Ctrl
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;All_Out
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode_check
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RC_Duty
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUupdate
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTRL_2
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTRL_1
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CALIBRATE_duty
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Auto_switch_2
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inav_correct
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mode3_flight_duty
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;camera_shell_pid
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Direction_flight
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fly_Ready
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_Data_Offset
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnoOF_DataAnl
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_AK8975_CalOffset_Mag
</UL>

<P><STRONG><a name="[181]"></a>_frcmple</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, frleqf.o(x$fpl$frleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmple_InfNaN
</UL>

<P><STRONG><a name="[158]"></a>_frnd</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, frnd.o(x$fpl$frnd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _frnd &rArr; __fpl_fnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tanf
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cosf
</UL>

<P><STRONG><a name="[ce]"></a>__aeabi_frsub</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$frsb))
<BR><BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_sqrt
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fast_atan2
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUupdate
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hight_Duty
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTRL_1
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lpf2pSetCutoffFreq
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_rredf2
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tanf
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cosf
</UL>

<P><STRONG><a name="[183]"></a>_frsb</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, faddsub_clz.o(x$fpl$frsb), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub1
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd1
</UL>

<P><STRONG><a name="[76]"></a>__aeabi_fsub</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, faddsub_clz.o(x$fpl$fsub))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fsub
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simple_3d_trans
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fast_atan2
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;my_deathzoom
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;To_180_degrees
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myself_Thr_Ctrl
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;All_Out
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;inav_calution
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RC_Duty
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MPU6050_Data_Prepare
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IMUupdate
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hight_Duty
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Cycle_T
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTRL_2
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTRL_1
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lpf2pSetCutoffFreq
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AnoOF_DataAnl
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_AK8975_Read_Mag_Data
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_AK8975_CalOffset_Mag
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_rredf2
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tanf
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cosf
</UL>

<P><STRONG><a name="[185]"></a>_fsub</STRONG> (Thumb, 234 bytes, Stack size 16 bytes, faddsub_clz.o(x$fpl$fsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd1
</UL>

<P><STRONG><a name="[16f]"></a>__fpl_return_NaN</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, retnan.o(x$fpl$retnan))
<BR><BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN1
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
</UL>

<P><STRONG><a name="[14b]"></a>__ARM_scalbn</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, scalbn.o(x$fpl$scalbn))
<BR><BR>[Calls]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;asin
</UL>

<P><STRONG><a name="[150]"></a>__ARM_scalbnf</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, scalbnf.o(x$fpl$scalbnf))
<BR><BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN1
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_rredf2
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_underflow
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_infnan
</UL>

<P><STRONG><a name="[186]"></a>__fpl_cmpreturn</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, trapv.o(x$fpl$trapveneer))
<BR><BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[7f]"></a>ANO_DT_Send_Check</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, data_transfer.o(i.ANO_DT_Send_Check))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = ANO_DT_Send_Check &rArr; ANO_DT_Send_Data &rArr; Usart1_Send &rArr; USART_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_DT_Send_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ANO_DT_Data_Exchange
</UL>

<P><STRONG><a name="[12a]"></a>SetSysClock</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_stm32f10x.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SetSysClock &rArr; SetSysClockTo72
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[12b]"></a>SetSysClockTo72</STRONG> (Thumb, 214 bytes, Stack size 12 bytes, system_stm32f10x.o(i.SetSysClockTo72))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>

<P><STRONG><a name="[131]"></a>TI1_Config</STRONG> (Thumb, 108 bytes, Stack size 20 bytes, stm32f10x_tim.o(i.TI1_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TI1_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[133]"></a>TI2_Config</STRONG> (Thumb, 130 bytes, Stack size 20 bytes, stm32f10x_tim.o(i.TI2_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TI2_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[135]"></a>TI3_Config</STRONG> (Thumb, 122 bytes, Stack size 20 bytes, stm32f10x_tim.o(i.TI3_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TI3_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[137]"></a>TI4_Config</STRONG> (Thumb, 130 bytes, Stack size 20 bytes, stm32f10x_tim.o(i.TI4_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TI4_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
</UL>

<P><STRONG><a name="[173]"></a>_dadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
</UL>

<P><STRONG><a name="[16c]"></a>_dsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[184]"></a>_fadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub_clz.o(x$fpl$fadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frsb
</UL>

<P><STRONG><a name="[178]"></a>_fsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub_clz.o(x$fpl$fsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frsb
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
</UL>

<P><STRONG><a name="[4d]"></a>_scanf_char_input</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, scanf_char.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> scanf_char.o(.text)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
